{"version":3,"sources":["hooks/use-http.js","lib/api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","QUOTE_API_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getAuthorQuotes","author","_id","text","quoteText","quoteAuthor","genre","quoteGenre","getGenreQuotes","getRandomQuote","loadedQuote","getSingleQuote","quoteId","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","err","undefined","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/0.ef4905c7.chunk.js","sourcesContent":["import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quote-builder-72b4f-default-rtdb.firebaseio.com';\nconst QUOTE_API_DOMAIN = 'https://quote-garden.herokuapp.com/api/v3/quotes/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getAuthorQuotes(author) {\n  const response = await fetch(`${QUOTE_API_DOMAIN}?author=${author}`);\n  const { data } = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: data[key]._id,\n      text: data[key].quoteText,\n      author: data[key].quoteAuthor,\n      genre: data[key].quoteGenre,\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getGenreQuotes(genre) {\n  const response = await fetch(`${QUOTE_API_DOMAIN}?genre=${genre}`);\n  const { data } = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: data[key]._id,\n      text: data[key].quoteText,\n      author: data[key].quoteAuthor,\n      genre: data[key].quoteGenre,\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getRandomQuote() {\n  const response = await fetch(`${QUOTE_API_DOMAIN}/random`);\n  const { data } = await response.json();\n  if(!response.ok) {\n    throw new Error(data.message || 'Could not generate quote');\n  }\n\n  const loadedQuote = {\n    id: data[0]._id,\n    text: data[0].quoteText,\n    author: data[0].quoteAuthor,\n    genre: data[0].quoteGenre,\n  };\n\n  return loadedQuote;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}